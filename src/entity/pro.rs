//! SeaORM Entity. Generated by sea-orm-codegen 0.8.0

use sea_orm::entity::prelude::*;
use serde::Serialize;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Serialize)]
#[sea_orm(table_name = "pro")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub id: i32,
    pub pro_name: Option<String>,
    pub birth: Option<String>,
    pub birth_place: Option<String>,
    pub org: Option<String>,
    pub pro_year: Option<i32>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::season_pro::Entity")]
    SeasonPro,
}

impl Related<super::season_pro::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::SeasonPro.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
